# -*- coding: utf-8 -*-
import re
import telebot
import botan
import config
import zmanim
import rosh_hodesh
import shabbos
import daf
import functions as f
import holidays as h
from flask import Flask, request


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
bot = telebot.TeleBot(config.TOKEN)
URL = 'http://db.ou.org/zmanim'

loc_pattern = r'^-?\d{1,2}\.{1}\d+, {1}-?\d{1,2}\.{1}\d+$'


@bot.message_handler(commands=['start'])
def handle_start(message):
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º id –≤ –±–¥, –µ—Å–ª–∏ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º
    f.check_id_in_db(message.from_user)
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row('–†—É—Å—Å–∫–∏–π', 'English')
    bot.send_message(message.from_user.id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫/Choose the language',
                     reply_markup=user_markup
                     )
    botan.track(message.from_user.id, message, 'start')


@bot.message_handler(commands=['help'])
def handle_help(message):
    menu = telebot.types.ReplyKeyboardMarkup(True, False)
    menu.row('üá∑üá∫', 'üá±üá∑', '–ù–∞–∑–∞–¥/Back')
    help_str = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å–ø—Ä–∞–≤–∫–∏'
    bot.send_message(message.from_user.id,
                     help_str,
                     reply_markup=menu)
    botan.track(message.from_user.id, message, 'help')


@bot.message_handler(commands=['report'])
def handle_report(message):
    report_str = '–ß—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ \n' \
                 't.me/benyomin, –∏–ª–∏ —Å—é–¥–∞ \nt.me/Meir_Yartzev. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞,' \
                 ' —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏' \
                 ' –≤–æ–ø—Ä–æ—Å–∞–º–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /help\n\nFor bug report ' \
                 'please write to \nt.me/benyomin or \nt.me/Meir_Yartzev. ' \
                 '\nPlease, make sure that you had been read '\
                 'F.A.Q. available by command /help'
    bot.send_message(message.from_user.id,
                     report_str,
                     disable_web_page_preview=True)
    botan.track(message.from_user.id, message, 'report')


@bot.message_handler(content_types=['location'])
def handle_text(message):
    f.check_location(message.from_user.id,
                     message.location.latitude,
                     message.location.longitude
                     )
    tz = f.get_tz_by_location(f.get_location_by_id(message.from_user.id))
    f.check_tz(message.from_user.id, tz)
    botan.track(message.from_user.id, message, '–ü–æ–ª—É—á–∏–ª –≥–µ–æ–º–µ—Ç–∫—É')


@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' or    \
       message.text == 'Change language' or \
       message.text == '–ù–∞–∑–∞–¥/Back':
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row('–†—É—Å—Å–∫–∏–π', 'English')
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫/'
                                               'Choose the language',
                         reply_markup=user_markup)
        botan.track(message.from_user.id, message, '–í—ã–±–æ—Ä —è–∑—ã–∫–∞')

    elif message.text == 'üá±üá∑':  # FAQ
        bot.send_message(message.from_user.id, 'https://goo.gl/4320iu')
        botan.track(message.from_user.id, message, 'FAQ')
    elif message.text == 'üá∑üá∫':  # –ß–ê–í–û
        bot.send_message(message.from_user.id, 'https://goo.gl/bavHuO')
        botan.track(message.from_user.id, message, '–ß–ê–í–û')

    elif message.text == '–†—É—Å—Å–∫–∏–π':
        user_markup = f.get_main_menu(message.text)
        bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ',
                         reply_markup=user_markup)
        botan.track(message.from_user.id, message, '–í—ã–±—Ä–∞–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫')
    elif message.text == 'English':
        user_markup = f.get_main_menu(message.text)
        bot.send_message(message.from_user.id, text='Choose the option',
                         reply_markup=user_markup)
        botan.track(message.from_user.id, message, '–í—ã–±—Ä–∞–Ω –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫')

    elif message.text == '–ó–º–∞–Ω–∏–º':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            zmanim_str = zmanim.get_zmanim(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.chat.id, zmanim_str)
            botan.track(message.from_user.id, message, '–ó–º–∞–Ω–∏–º –†—É—Å')
    elif message.text == 'Zmanim':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            zmanim_str = zmanim.get_zmanim(loc, 'English')
            bot.send_message(message.chat.id, zmanim_str)
            botan.track(message.from_user.id, message, '–ó–º–∞–Ω–∏–º –ê–Ω–≥–ª')

    elif message.text == '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ó–º–∞–Ω–∏–º':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            zmanim_str = zmanim.get_ext_zmanim(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.chat.id, zmanim_str)
            botan.track(message.from_user.id, message,
                        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ó–º–∞–Ω–∏–º –†—É—Å')
    elif message.text == 'Extended Zmanim':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            zmanim_str = zmanim.get_ext_zmanim(loc, 'English')
            bot.send_message(message.chat.id, zmanim_str)
            botan.track(message.from_user.id, message,
                        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∑–º–∞–Ω–∏–º –ê–Ω–≥–ª')

    elif message.text == '–®–∞–±–±–∞—Ç':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.from_user.id,
                             '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            shabbat_str = shabbos.get_shabbos_string(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, shabbat_str)
            botan.track(message.from_user.id, message, '–®–∞–±–±–∞—Ç –†—É—Å')
    elif message.text == 'Shabbos':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.from_user.id, 'Send your location')
        else:
            shabbat_str = shabbos.get_shabbos_string(loc, 'English')
            bot.send_message(message.from_user.id, shabbat_str)
            botan.track(message.from_user.id, message, '–®–∞–±–±–∞—Ç –ê–Ω–≥–ª')

    elif message.text == '–†–æ—à-–•–æ–¥–µ—à':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        rh = rosh_hodesh.get_rh(loc, '–†—É—Å—Å–∫–∏–π')
        bot.send_message(message.chat.id, rh)
        botan.track(message.from_user.id, message, '–†–æ—à-–•–æ–¥–µ—à –†—É—Å')
    elif message.text == 'Rosh Chodesh':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        rh = rosh_hodesh.get_rh(loc, 'English')
        bot.send_message(message.chat.id, rh)
        botan.track(message.from_user.id, message, '–†–æ—à-–•–æ–¥–µ—à –ê–Ω–≥–ª')

    elif message.text == '–ü—Ä–∞–∑–¥–Ω–∏–∫–∏':
        holiday_menu = f.get_holiday_menu('–†—É—Å—Å–∫–∏–π')
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ '
                                               '(–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–æ–∂–Ω–æ —Å–∫—Ä–æ–ª–ª–∏—Ç—å)',
                         reply_markup=holiday_menu)
        botan.track(message.from_user.id, message, '–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –†—É—Å')
    elif message.text == 'Holidays':
        holiday_menu = f.get_holiday_menu('English')
        bot.send_message(message.from_user.id, 'Choose (scroll keyboard)',
                         reply_markup=holiday_menu)
        botan.track(message.from_user.id, message, '–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –ê–Ω–≥–ª')

    elif message.text == '–ü–æ—Å—Ç—ã':
        fast_menu = f.get_fast_menu('–†—É—Å—Å–∫–∏–π')
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ',
                         reply_markup=fast_menu)
        botan.track(message.from_user.id, message, '–ü–æ—Å—Ç—ã –†—É—Å')
    elif message.text == 'Fast days':
        fast_menu = f.get_fast_menu('English')
        bot.send_message(message.from_user.id, 'Choose',
                         reply_markup=fast_menu)
        botan.track(message.from_user.id, message, '–ü–æ—Å—Ç—ã –ê–Ω–≥–ª')

    elif message.text == '–î–∞—Ñ –ô–æ–º–∏ (–¢–∞–ª–º—É–¥)':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        daf_yomi = daf.get_daf(loc, '–†—É—Å—Å–∫–∏–π')
        bot.send_message(message.from_user.id, daf_yomi)
        botan.track(message.from_user.id, message, '–î–∞–π –ô–æ–º–∏ –†—É—Å')
    elif message.text == 'Daf Yomi':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        daf_yomi = daf.get_daf(loc, 'English')
        bot.send_message(message.from_user.id, daf_yomi)
        botan.track(message.from_user.id, message, '–î–∞—Ñ –ô–æ–º–∏ –ê–Ω–≥–ª')

    elif re.match(loc_pattern, message.text):
        print(123)
        loc = message.text.split(sep=', ')
        f.check_location(message.from_user.id, loc[0], loc[1])
        botan.track(message.from_user.id, message, '–ü–æ–ª—É—á–∏–ª —Ç–µ–∫—Å—Ç–æ–≤—É—é –ª–æ–∫–∞—Ü–∏—é')

    elif message.text == '–û–±–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ':
        upd_str = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã'
        bot.send_message(message.from_user.id, upd_str)
        botan.track(message.from_user.id, message, '–û–±–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –†—É—Å')
    elif message.text == 'Update location':
        upd_str = 'Please, send new location'
        bot.send_message(message.from_user.id, upd_str)
        botan.track(message.from_user.id, message, '–û–±–Ω–æ–≤–∏–ª –õ–æ–∫–∞—Ü–∏—é –ê–Ω–≥–ª')

    elif message.text == '–ù–∞–∑–∞–¥':
        user_markup = f.get_main_menu('–†—É—Å—Å–∫–∏–π')
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ:',
                         reply_markup=user_markup)
        botan.track(message.from_user.id, message, '–ù–∞–∑–∞–¥ –†—É—Å')
    elif message.text == 'Back':
        user_markup = f.get_main_menu('English')
        bot.send_message(message.from_user.id, 'Choose:',
                         reply_markup=user_markup)
        botan.track(message.from_user.id, message, '–ù–∞–∑–∞–¥ –ê–Ω–≥–ª')
###############################################################################
    elif message.text == '–†–æ—à-–ê—à–∞–Ω–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            loc = ['55.7', '37.5']
            h_str = h.rosh_hashanah(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–†–æ—à –∞–®–∞–Ω–∞ –†—É—Å')
    elif message.text == 'Rosh HaShanah':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.rosh_hashanah(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–†–æ—à –∞–®–∞–Ω–∞ –ê–Ω–≥–ª')

    elif message.text == '–ô–æ–º-–ö–∏–ø—É—Ä':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.yom_kipur(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ô–æ–º-–ö–∏–ø—É—Ä –†—É—Å')
    elif message.text == 'Yom Kippur':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.yom_kipur(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ô–æ–º-–ö–∏–ø—É—Ä –ê–Ω–≥–ª')

    elif message.text == '–°—É–∫–∫–æ—Ç':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.succos(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–°—É–∫–∫–æ—Ç –†—É—Å')
    elif message.text == 'Succos':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.succos(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–°—É–∫–∫–æ—Ç –ê–Ω–≥–ª')

    elif message.text == '–®–º–∏–Ω–∏ –ê—Ü–µ—Ä–µ—Ç':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.shmini_atzeres_simhat(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–®–º–∏–Ω–∏ –ê—Ü–µ—Ä–µ—Ç –†—É—Å')
    elif message.text == 'Shmini Atzeres':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.shmini_atzeres_simhat(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–®–º–∏–Ω–∏ –ê—Ü–µ—Ä–µ—Ç –ê–Ω–≥–ª')

    elif message.text == '–•–∞–Ω—É–∫–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.chanukah(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–•–∞–Ω—É–∫–∞ –†—É—Å')
    elif message.text == 'Chanukah':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.chanukah(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–•–∞–Ω—É–∫–∞ –ê–Ω–≥–ª')

    elif message.text == '–¢—É –±–∏–®–≤–∞—Ç':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tu_bshevat(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–¢—É –±–∏–®–≤–∞—Ç –†—É—Å')
    elif message.text == 'Tu BShevat':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.tu_bshevat(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–¢—É-–±–∏–®–≤–∞—Ç –ê–Ω–≥–ª')

    elif message.text == '–ü—É—Ä–∏–º':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.purim(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü—É—Ä–∏–º –†—É—Å')
    elif message.text == 'Purim':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.purim(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü—É—Ä–∏–º –ê–Ω–≥–ª')

    elif message.text == '–ü–µ–π—Å–∞—Ö':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.pesach(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–µ–π—Å–∞—Ö –†—É—Å')
    elif message.text == 'Pesach':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.pesach(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–µ–π—Å–∞—Ö –ê–Ω–≥–ª')

    elif message.text == '–õ–∞–≥ –±–∞–û–º–µ—Ä':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.lag_baomer(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–õ–∞–≥ –ë–∞–æ–º–µ—Ä –†—É—Å')
    elif message.text == 'Lag BaOmer':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.lag_baomer(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–õ–∞–≥ –ë–∞–æ–º–µ—Ä –ê–Ω–≥–ª')

    elif message.text == '–®–∞–≤—É–æ—Ç':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.shavuot(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–®–∞–≤—É–æ—Ç –†—É—Å')
    elif message.text == 'Shavuot':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.shavuot(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–®–∞–≤—É–æ—Ç –ê–Ω–≥–ª')

    elif message.text == '15 –ê–≤–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tu_bav(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '15 –ê–≤–∞ –†—É—Å')
    elif message.text == 'Tu BAv':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tu_bav(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '15 –ê–≤–∞ –ê–Ω–≥–ª')

    elif message.text == '–ò–∑—Ä–∞–∏–ª—å—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.get_israel(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message,
                        '–ò–∑—Ä–∞–∏–ª—å—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –†—É—Å')
    elif message.text == 'Israel holidays':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, 'Send your location')
        else:
            h_str = h.get_israel(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message,
                        '–ò–∑—Ä–∞–∏–ª—å—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –ê–Ω–≥–ª')

    elif message.text == '–ü–æ—Å—Ç –ì–µ–¥–∞–ª–∏–∏':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tzom_gedaliah(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–æ—Å—Ç –ì–µ–¥–∞–ª–∏–∏ –†—É—Å')
    elif message.text == 'Tzom Gedaliah':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tzom_gedaliah(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–æ—Å—Ç –ì–µ–¥–∞–ª–∏–∏ –ê–Ω–≥–ª')

    elif message.text == '10 –¢–µ–≤–µ—Ç–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.asarah_btevet(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '10 –¢–µ–≤–µ—Ç–∞ –†—É—Å')
    elif message.text == 'Asarah BTevet':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.asarah_btevet(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '10 –¢–µ–≤–µ—Ç–∞ –ê–Ω–≥–ª')

    elif message.text == '–ü–æ—Å—Ç –≠—Å—Ç–µ—Ä':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.taanit_esther(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–æ—Å—Ç –≠—Å—Ç–µ—Ä –†—É—Å')
    elif message.text == 'Taanit Esther':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.taanit_esther(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '–ü–æ—Å—Ç –≠—Å—Ç–µ—Ä –ê–Ω–≥–ª')

    elif message.text == '17 –¢–∞–º–º—É–∑–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.shiva_asar_tammuz(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '17 –¢–∞–º–º—É–∑–∞ –†—É—Å')
    elif message.text == 'Shiva Asar BTammuz':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.shiva_asar_tammuz(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '17 –¢–∞–º–º—É–∑–∞ –ê–Ω–≥–ª')

    elif message.text == '9 –ê–≤–∞':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tisha_bav(loc, '–†—É—Å—Å–∫–∏–π')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '9 –ê–≤–∞ –†—É—Å')
    elif message.text == 'Tisha BAv':
        loc = f.get_location_by_id(message.from_user.id)
        if not loc:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
        else:
            h_str = h.tisha_bav(loc, 'English')
            bot.send_message(message.from_user.id, h_str)
            botan.track(message.from_user.id, message, '9 –ê–≤–∞ –ê–Ω–≥–ª')


app = Flask(__name__)


@app.route('/{}'.format(config.TOKEN), methods=['POST'])
def view():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return 'ok'



bot.remove_webhook()
url = config.URL
bot.set_webhook(url)
